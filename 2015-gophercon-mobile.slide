Go on Mobile

GopherCon

Hana Kim
Google


* Prehistory

Mobile support was frequently requested

Some users built their own Go binaries for Android with cgo + external linking through NDK tool chains

Apps with an out-of-process model
　Camlistore android app, ...

Apps with an in-process model
　Goandroid+Mandala, ...

* golang.org/x/mobile

Goal: Bring Go to Mobile Platforms

Why?

- Use Go to program a complete system (server/client)
- Write a single cross-platform Go library
- Write more Go than C/C++ ❤

* Two ways of using Go

SDK Apps

- Write Android UI in Java
- Write iOS UI in Swift/Objective-C
- Write common functionality in Go as a library

Native Apps

- Write the whole app in Go
- Use Go packages for graphics, event handling, audio, ...


* Pure-Go Apps (Native Apps)

* What's available?

Cross-platform APIs

golang.org/x/mobile/...
- [[http://golang.org/x/mobile/app][app: App control]]
- [[http://golang.org/x/mobile/gl][gl: OpenGL ES 2]]
- [[https://golang.org/x/mobile/event][event: Events ]]
- [[https://golang.org/x/mobile/geom][geom: Screen geometry]]
- [[https://golang.org/x/mobile/exp/audio][audio: Audio]]
- [[https://golang.org/x/mobile/exp/font][font: System font]]
- [[https://golang.org/x/mobile/exp/sprite][sprite: 2-D rendering]]
- [[https://golang.org/x/mobile/exp/sensor][sensor: Motion sensors]]

* The gomobile tool

  $ go get golang.org/x/mobile/cmd/gomobile

Simplifies toolchain installation and app deployment

To install the Android/iOS compiler tool chain:

	$ gomobile init

To build an Android APK and install on a device:

	$ gomobile -target=android install

To build an iOS app (work in progress):

	$ gomobile -target=ios build

* Demo: Hello, Gopher!

* Under the hood

.code 2015-gophercon-mobile/hello/main.go /START OMIT/,/END OMIT/

This program uses the listed packages; no Java or C in my code.

* Gobind Apps (SDK Apps)

* Working with Java/Objective-C

.image 2015-gophercon-mobile/gobind.png 300 _

Manually mapping data structures and functions between languages

Not fun!


* The gobind tool

	$ go get golang.org/x/mobile/cmd/gobind

Automates language binding through code generation

Defines the language binding from exported Go APIs; no explicit annotation

Currently supports a [[http://golang.org/x/mobile/cmd/gobind][subset of Go types]]


* Functions & Basic types & Errors

Go

	package mypkg

	func Fn() (int64, error) { return 0, nil }

Generated Java

	public abstract class Mypkg {
	    public static long Fn() throws Exception { ... }
	}

Generated Objective-C

	FOUNDATION_EXPORT BOOL GoMypkg_Fn(int64_t* ret0_, NSError** error);

* Passing Go objects to Java

Go

	package mypkg

	type Counter struct {
		Value int64
	}
	func (c *Counter) Inc() { c.Value++ }

	func NewCounter() *Counter { return &Counter{ 5 } }

Generated Java API

	public abstract class Mypkg {
		public static final class Counter {
			public void Inc() { ... }
			public long GetValue() { ... }
			public void SetValue(long value) { ... }
		}

		public static Counter NewCounter() { ... }
	}


* Passing Go objects to Objective-C

Go

	package mypkg

	type Counter struct {
		Value int
	}
	func (c *Counter) Inc() { c.Value++ }
	
	func NewCounter() *Counter { return &Counter{ 5 } }

Generated Objective-C
  	
	@interface GoMypkg_Counter : NSObject { }
	@property(strong, readonly) GoSeqRef *ref;
	- (int64_t)Value;
	- (void)setValue:(int64_t)v;
	- (void)Inc;
	@end
	
	FOUNDATION_EXPORT GoMypkg_Counter* GoMypkg_NewCounter();

More details in [[http://golang.org/x/mobile/cmd/gobind]]

* How to build it?

.image 2015-gophercon-mobile/memegobind.jpg 500 _


* The gomobile bind command

Simplifies the build process. Internally,

- Generates .go glue code and the target language code using gobind

- Compiles the .go glue code to a shared library

- Compiles the generated target language code

- Packages everything into a `.aar` file (modern way to distribute android library) 

- Produces a `.a` file and header files. (work in progress)

(DEMO)

* Android Studio integration

Android Studio 1.2+ supports `.aar` import

.image 2015-gophercon-mobile/androidstudio2.png 250 _

To update the .aar,
- Build script to invoke `gomobile bind`, or
- Gradle-plugin to invoke `gomobile bind` and publish the output

In the future, this can be integrated into Android Studio


* The Story of Ivy Apps

[[robpike.io/ivy]]

Ivy is an interpreter for an APL-like language developed by Rob Pike.

.link https://www.youtube.com/watch?v=PXoG0WX0r_E&t=3m36s Implementing a bignum calculator @ golang-syd

It's a useful desktop calculator that handles big int, rational numbers, vectors, matrices
It's fun to play with

* I like it!

.image 2015-gophercon-mobile/canihas.jpg 500 _

* Bring Ivy to Mobile

	func Run(expr string) (string, error) 

.image 2015-gophercon-mobile/ivymobile.png 480 _
.caption Ivy logo by [[http://www.reneefrench.com][Renée French]]	


* Where are we now?

* Go 1.4: Hello, Android!


Can build Android apps (`arm`)

Android builder
　
The `gobind` tool for Java and Go language binding

Packages for cross-device apps: basic app control, OpenGL ES 2, touch

.link https://golang.org/s/go14android
.link https://golang.org/s/gobind

* Go 1.5: Hello, iOS!

Experimental support for iOS (`arm,arm64`)

iOS builder 

Major progress in [[https://docs.google.com/document/d/1nr-TQHw_er6GOQRsF6T43GGhFDelrAP0NqSS_00RgZQ/edit][shared library support]]

  -buildmode=c-shared   // generates .so file loadable by non-Go code
  -buildmode=c-archive  // generates .a file that can be linked into non-Go code

`golang.org/x/mobile` repo getting better

- The `gomobile` tool for mobile app/library build
- Extended `gobind` tool: Objective-C binding
- `golang.org/x/mobile/exp`: experimenting with audio, sensor, sprite, ...


* Go 1.6+

Improvement in GL/UI packages

More APIs available to "pure-Go" apps

Testing, Profiling, Debugging

Support for more platforms (e.g. android/x86, ...)

Richer type support in `gobind`

IDE integration

* Contributors
.image 2015-gophercon-mobile/contributors.png


